# shell provision halp:
# https://automation-remarks.com/setting-vagrant/

IMAGE_NAME = "generic/debian10"
#N = 2

Vagrant.configure("2") do |config|
    config.ssh.insert_key = 'false'
    config.vm.provider :virtualbox do |virtualbox|
        virtualbox.memory = 4096
        virtualbox.cpus = 2
    end
      
    config.vm.define "l2j-debian" do |master|
        master.vm.box = IMAGE_NAME
        master.vm.network "public_network", mode: "bridge", ip: "192.168.1.210"
        #master.ssh.private_key_path = "~/.ssh/id_rsa"
        master.ssh.forward_agent = true
        master.vm.hostname = "ubuforwin"
        master.vm.provision "shell", inline: <<-SHELL
            set -e
            sudo ip route del default via 10.0.2.2
            sudo ip route add default via 192.168.1.1
            sudo apt-get install git -y
            sudo tee /etc/apt/sources.list.d/MariaDB.list <<EOF
            # MariaDB 10.4 repository list - created 2019-08-12 01:57 UTC
            # http://downloads.mariadb.org/mariadb/repositories/
            deb [arch=amd64] http://mirror.hosting90.cz/mariadb/repo/10.4/debian buster main
            deb-src http://mirror.hosting90.cz/mariadb/repo/10.4/debian buster main
EOF
            sudo apt update -y 
            sudo apt install mariadb-server -y
            sudo mysql -u root -p "" "CREATE OR REPLACE USER 'l2j'@'%' IDENTIFIED BY 'l2jserver2019';"
            sudo mysql -u root -p "" "GRANT ALL PRIVILEGES ON *.* TO 'l2j'@'%' IDENTIFIED BY 'l2jserver2019';"
            sudo mysql -u root -p "" "FLUSH PRIVILEGES;"
            mkdir -p /opt/l2j/git && cd /opt/l2j/git
            git clone https://bitbucket.org/l2jserver/l2j-server-login.git
            git clone https://bitbucket.org/l2jserver/l2j-server-game.git
            git clone https://bitbucket.org/l2jserver/l2j-server-datapack.git
            cd /opt/l2j/git/l2j-server-login && chmod 755 mvnw && ./mvnw install
            cd /opt/l2j/git/l2j-server-game && chmod 755 mvnw && ./mvnw install
            cd /opt/l2j/git/l2j-server-datapack && chmod 755 mvnw && ./mvnw install
            mkdir -p /opt/l2j/server/login
            unzip /opt/l2j/git/l2j-server-login/target/l2jlogin-*.zip -d /opt/l2j/server/login
            mkdir -p /opt/l2j/server/game
            unzip /opt/l2j/git/l2j-server-game/target/l2j-server-game-*.zip -d /opt/l2j/server/game
            unzip /opt/l2j/git/l2j-server-datapack/target/l2j-server-datapack-*.zip -d /opt/l2j/server/game
            mkdir -p /opt/l2j/cli && cd /opt/l2j/cli
            wget CLI_LINK -P /tmp
            unzip /tmp/l2jcli-*.zip -d /opt/l2j/cli
            chmod 755 l2jcli.sh
            ./l2jcli.sh
            db install -sql /opt/l2j/server/login/sql -u l2j -p l2jserver2019 -m FULL -t LOGIN -c -mods
            db install -sql /opt/l2j/server/game/sql -u l2j -p l2jserver2019 -m FULL -t GAME -c -mods
            quit
            cd /opt/l2j/server/login && mkdir -p log
            chmod 755 LoginServer_loop.sh
            chmod 755 startLoginServer.sh
            chmod 755 startSQLAccountManager.sh
            cd /opt/l2j/server/game && mkdir -p log
            chmod 755 GameServer_loop.sh
            chmod 755 startGameServer.sh
            cd /opt/l2j/cli
            ./l2jcli.sh
            account create -u Zoey76 -p -a 8
            quit
            cd /opt/l2j/server/login
            ./startLoginServer.sh
            cd /opt/l2j/server/game
            ./startGameServer.sh
            ufw allow 2106/tcp
            ufw allow 7777/tcp
        SHELL



# chef provisioning example
    #    config.vm.provision :chef_solo do |chef|
    #      chef.arguments = "--chef-license accept"
    #      chef.cookbooks_path = "cookbooks"
    #      chef.roles_path = "cookbooks/roles"
    #      chef.add_role("vagrant")
    #    end
    end
end

#Vagrant.configure("2") do |config|
#    config.ssh.insert_key = 'false'
#    config.vm.provider :virtualbox do |v|
#        v.memory = 2048
#        v.cpus = 2
#    end
#
#    (1..N).each do |i|
#        config.vm.define "node-#{i}" do |node|
#            node.vm.box = IMAGE_NAME
#            node.vm.network "public_network", mode: "bridge", ip: "192.168.1.#{i + 170}"
#            node.vm.hostname = "node-#{i}"
#        end
#    end
#end


##            sudo mkdir -p /etc/docker
##            sudo touch /etc/docker/daemon.json
##            sudo tee -a /etc/docker/daemon.json <<EOF
##{
##"registry-mirrors": ["http://192.168.1.88:6000"]
##}
##EOF
##            curl http://192.168.1.88:6000/v2/_catalog